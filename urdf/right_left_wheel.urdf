<?xml version="1.0"?>
<!-- Run the following command on the terminal -->
<!-- roslaunch urdf_tutorial display.launch model:='$(find guru_bot)/urdf/right_left_wheel.urdf' -->
<!-- Install the following  -->
<!-- sudo apt install ros-kinetic-joint-state-publisher-gui -->
<!-- http://wiki.ros.org/urdf/Tutorials -->



<!-- Have you Tried to open multiple terminals using:
Ctrl + Shift + T
Then switching among them using:
Ctrl + PageUP
And
Ctrl + PageDown
I usually use this scenario at least for me -->

<!-- ixx         ixy == 0        ixz ==0
ixy ==0     iyy             iyz ==0
ixz==0      iyz==0          izz  -->

<robot name="guru_bot">
    <link name="base_link">
        <visual>
            <geometry>
                <box size="0.6 0.3 0.1"/>
            </geometry>
            <material name="red">
                <color rgba="1 0.0 0.0 1"/>
            </material>
        </visual>   
        <!-- Add the collision geometry. The physical property. -->
        <collision>
            <geometry>
                <box size="0.6 0.3 0.1"/>
            </geometry>
        </collision>  
        <inertial>
            <mass value="1.0"/>
            <inertia ixx="0.015" ixy="0" ixz="0" iyy="0.0375" iyz="0.0" izz="0.0375"/>
        </inertial> 
    </link>
    <link name="front_caster_of_wheel">
        <visual>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
            <material name="green">
                <color rgba="0.0 0.1 0.0 1"/>   
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.00083" ixy="0" ixz="0" iyy="0.00083" iyz="0.0" izz="0.000167"/>
        </inertial> 
    </link>
    <joint name="front_caster_of_wheel_joint" type="continuous">
       <axis xyz="0.0 0.0 1"/> 
       <parent link="base_link"/>
       <child link="front_caster_of_wheel"/>
       <origin xyz="0.3 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </joint>
    <link name="front_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.035" length="0.05"/>
            </geometry>
            <material name="black">
                
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.035" length="0.05"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="5.1458e-5" ixy="0" ixz="0" iyy="5.1458e-5" iyz="0.0" izz="6.125e-5"/>
        </inertial> 
    </link>
    <joint name="front_wheel_joint" type="continuous">
        <axis xyz="0.0 0.0 1.0"/>
        <parent link="front_caster_of_wheel"/>
        <child link="front_wheel"/>
        <origin xyz="0.05 0.0 -0.05" rpy="-1.5708 0.0 0.0"/> <!--Horizontal to front caster wheel, offset from the front caster to wheel-->
    </joint>
    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.055" length="0.075"/>
            </geometry>
            <material name="black">
                <color rgba="0.0 0.0 0.0 1"/>
                
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.055" length="0.075"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="5.1458e-5" ixy="0.0" ixz="0.0" iyy="5.1458e-5" iyz="0.0" izz="6.125e-5"/>
        </inertial> 
    </link>
    <joint name="right_wheel_joint" type="continuous">
        <axis xyz="0.0 0.0 1.0"/>
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="-0.2825 -.13 -.05" rpy="-1.5707 0.0 0.0"/> 
        <!--xyz - positioning the wheel-->
    </joint>
    
    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.055" length="0.075"/>
            </geometry>
            <material name="black">
                <color rgba="0.0 0.0 0.0 1"/>
                
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.055" length="0.075"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="5.1458e-5" ixy="0" ixz="0" iyy="5.1458e-5" iyz="0.0" izz="6.125e-5"/>
        </inertial> 
    </link>
    <joint name="left_wheel_joint" type="continuous">
        <axis xyz="0.0 0.0 1.0"/>
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="-0.2825 .13 -.05" rpy="-1.5707 0.0 0.0"/> 
        <!--xyz - positioning the wheel-->
    </joint>
<!-- roslaunch guru_bot bot_model.launch    Use this command in th terminal once the launch file is created -->
    <!-- now we ant to control through keyboard -->
    <!-- so cmd_vel odom interface  support is required -->
    
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <!-- the above command will automatically enable /cmd_vel ROS topic  -->
            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
            <legacyMode>false</legacyMode>

            <robotBaseFrame>base_link</robotBaseFrame>
            <wheelSeparation>0.25</wheelSeparation>
            <wheelDiameter>0.07</wheelDiameter>
            <publishWheelJointState>true</publishWheelJointState>
      
        </plugin>
     </gazebo>
     <!-- Before running the code with gazebo install the following from the terminal -->
<!-- sudo apt-get install ros-kinetic-teleop-twist-keyboard -->
<!-- More info http://wiki.ros.org/teleop_twist_keyboard -->
<!-- <!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%%%%%%%%%%%%%%%%%%%%%%~~~~~~~~~~~~~~~~~~~~~~~~> -->
<!-- Linking Gazebo and rviz -->
<!-- run roslaunch guru_bot bot_model.launch -->
 <!-- then run rviz on the new terminal  -->
 <!-- Select Fixed frame as odom -->
 <!-- then click on add and select the robot model  -->
  <!-- You will observe that the actual robot will not be visible in rviz  -->
   <!-- thes is because the rviz is not subscribed to /joint_states -->
   <!-- therefore add the following in the urdf file and modify the launch file  -->
   <!-- rostopic echo /joint_states           try this command in new terminal -->
<gazebo>
        <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <!-- the above command will automatically enable /cmd_vel ROS topic  -->
            <jointName>front_caster_of_wheel_joint, front_wheel_joint</jointName>
      
        </plugin>
     </gazebo>
</robot>
